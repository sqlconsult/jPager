How to connect to your remote MongoDB server


1. Set up your user

    ssh into your server and enter the mongo shell by typing mongo.
    For this example, I will set up a user named steve and give that user
    read & write access to the jpager_db database.

    use jpager_db

    db.createUser({
        user: 'steve',
        pwd: 'imapassword',
        roles: [{ role: 'readWrite', db:'jpager_db'}]
    })

2. Enable auth and open MongoDB access up to all IPs

   Edit MongoDB config file. On Ubuntu: sudo vim /etc/mongod.conf


    Look for the net line and comment out the bindIp line under it,
    which is currently limiting MongoDB connections to localhost:

    Warning: do not comment out the bindIp line without enabling authorization.
             Otherwise you will be opening up the whole internet to have full
             admin access to all mongo databases on your MongoDB server!

    # network interfaces
    net:
      port: 27017
      #  bindIp: 127.0.0.1  <- comment out this line


    Scroll down to the #security: section and add the following line. Make sure to
    un-comment the security: line.

    security:
      authorization: 'enabled'

3. Open port 27017

4. Last step: restart mongo daemon (mongod)

    sudo service mongod restart


5. Connect from local PC

    mongo -u steve -p imapassword 167.99.9.38/jpager_db

    import pymongo
    # defaults to port 27017



7 - Create a user

    db.createUser(
    {
        user: "test_admin",
        pwd: "admin",
        roles: [ { role: "userAdminAnyDatabase", db: "admin" } ]
    } )

8 - restart mongo daemon (mongod)

    sudo service mongod stop
    sudo service mongod start
    sudo service mongod status

9 - Using pymongo with your remote MongoDB server

    import pymongo
    client = pymongo.MongoClient('mongodb://test_admin:admin@159.203.74.232:27017/test')
    client.database_names()

    db = client['test']
    db.collection_names()

    db.collection_names()
    ['sales', 'restaurants']


db['jPager'].find({ "job_name":"Test Job 1001" }).pretty()